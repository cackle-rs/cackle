[common]
version = 2
import_std = [
    "fs",
    "net",
    "process",
]

[sandbox]
kind = "Bubblewrap"

[api.net]
include = [
    "mio::net",
    "rustix::net",
]
exclude = [
    "mio::net::uds",
]

[api.fs]
include = [
    "rustix::fd",
    "rustix::fs",
    "rustix::mm",
    "rustix::path",
    "serde::de::impls::PathBufVisitor",
]
no_auto_detect = [
    "cargo-acl",
]

[api.process]
include = [
    "rustix::process",
]

[api.termios]
include = [
    "rustix::termios",
]

[api.rustix-other]
include = [
    "rustix"
]
exclude = [
    "rustix::process",
    "rustix::fs",
    "rustix::fd",
    "rustix::mm",
    "rustix::path",
    "rustix::net",
    "rustix::termios",
]

[pkg.serde_derive]
allow_proc_macro = true

[pkg.clap_derive]
allow_proc_macro = true

[pkg.indoc]
allow_proc_macro = true

[pkg.thiserror-impl]
allow_proc_macro = true

[pkg.unicode-ident]
allow_unsafe = true

[pkg.serde]
allow_unsafe = true
allow_apis = [
    "fs",
]
build.allow_apis = [
    "process",
]

[pkg.libc]
allow_unsafe = true
build.allow_apis = [
    "process",
]

[pkg.proc-macro2]
allow_unsafe = true
build.allow_apis = [
    "process",
]

[pkg.rustix]
allow_unsafe = true
build.allow_apis = [
    "fs",
    "process",
]

[pkg.autocfg]
allow_apis = [
    "fs",
    "process",
]

[pkg.bitflags]
allow_unsafe = true

[pkg.linux-raw-sys]
allow_unsafe = true

[pkg.hashbrown]
allow_unsafe = true

[pkg.thiserror]
build.allow_apis = [
    "fs",
    "process",
]

[pkg.scopeguard]
allow_unsafe = true

[pkg.log]
allow_unsafe = true

[pkg.crc32fast]
allow_unsafe = true
build.allow_apis = [
    "process",
]

[pkg.indexmap]
allow_unsafe = true

[pkg.signal-hook-registry]
allow_unsafe = true

[pkg.syn]
allow_unsafe = true
build.allow_apis = [
    "process",
]

[pkg.utf8parse]
allow_unsafe = true

[pkg.smallvec]
allow_unsafe = true

[pkg.mio]
allow_unsafe = true

[pkg.lock_api]
allow_unsafe = true

[pkg.is-terminal]
allow_unsafe = true
allow_apis = [
    "termios",
]

[pkg.camino]
allow_unsafe = true
allow_apis = [
    "fs",
]
build.allow_apis = [
    "process",
]

[pkg.signal-hook]
allow_unsafe = true

[pkg.anstyle-parse]
allow_unsafe = true

[pkg.parking_lot_core]
allow_unsafe = true

[pkg.anstyle]
allow_unsafe = true

[pkg.semver]
allow_unsafe = true
build.allow_apis = [
    "process",
]

[pkg.serde_json]
allow_unsafe = true

[pkg.static_assertions]
allow_unsafe = true

[pkg.parking_lot]
allow_unsafe = true

[pkg.clap_lex]
allow_unsafe = true

[pkg.ryu]
allow_unsafe = true

[pkg.itoa]
allow_unsafe = true

[pkg.anstream]
allow_unsafe = true

[pkg.anyhow]
allow_unsafe = true
build.allow_apis = [
    "fs",
    "process",
]

[pkg.twox-hash]
allow_unsafe = true

[pkg.stable_deref_trait]
allow_unsafe = true

[pkg.byteorder]
allow_unsafe = true

[pkg.winnow]
allow_unsafe = true

[pkg.crossterm]
allow_unsafe = true
allow_apis = [
    "fs",
    "process",
]

[pkg.flate2]
allow_unsafe = true

[pkg.gimli]
allow_unsafe = true

[pkg.ruzstd]
allow_unsafe = true

[pkg.toml_edit]
allow_unsafe = true

[pkg.memchr]
allow_unsafe = true

[pkg.once_cell]
allow_unsafe = true

[pkg.lazy_static]
allow_unsafe = true

[pkg.addr2line]
allow_unsafe = true

[pkg.object]
allow_unsafe = true

[pkg.colored]
allow_unsafe = true

[pkg.cargo-acl]
allow_apis = [
    "fs",
    "process",
]
test.sandbox.bind_writable = [
    "test_crates/crab-bin/scratch",
    "test_crates/crab-9/scratch",
    "test_crates/crab-11/scratch",
]
test.sandbox.make_writable = [
    "test_crates/target",
]
test.sandbox.allow_network = true

[pkg.clap_builder]
allow_apis = [
    "fs",
]

[pkg.cargo_metadata]
allow_apis = [
    "fs",
    "process",
]

[pkg.anstyle-query]
allow_unsafe = true

[pkg.paste]
allow_proc_macro = true
build.allow_apis = [
    "process",
]

[pkg.tempfile]
allow_apis = [
    "fs",
]

[pkg.thiserror-core-impl]
allow_proc_macro = true

[pkg.thiserror-core]
build.allow_apis = [
    "fs",
    "process",
]

[pkg.strum_macros]
allow_proc_macro = true

[pkg.rustversion]
allow_proc_macro = true
build.allow_apis = [
    "fs",
    "process",
]

[pkg.either]
allow_unsafe = true

[pkg.itertools]
allow_unsafe = true

[pkg.tui-input]
allow_unsafe = true
